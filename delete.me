import { Badge } from '@/components/ui/badge/badge';
import { useOutside } from '@/hooks/use.outside';

export interface IOption {
  label: string;
  value: string;
}

interface ISingleSelect {
  data: IOption[];
  onChange: (value: string) => void;
  value: string;
}

export function SingleSelect({ data, onChange, value }: ISingleSelect) {
  const { isShow, setIsShow, ref } = useOutside(false);
  const getValue = () => data.find((item) => item.value === value)?.value;

  return (
    <div className={'relative min-w-36'} ref={ref}>
      <button
        onClick={(e) => {
          e.preventDefault();
          setIsShow(!isShow);
        }}
      >
        {getValue() ? (
          <Badge variant={value} className={`capitalize ${value}`}>
            {getValue()}
          </Badge>
        ) : (
          <Badge>None</Badge>
        )}
      </button>

      {isShow && (
        <div className="absolute w-full p-2.5 left-0 slide bg-secondary z-10 shadow rounded-lg top-[calc(100%+.5rem)]">
          {data.map((item) => (
            <button
              key={item.value}
              onClick={(e) => {
                e.preventDefault();
                onChange(item.value);
                setIsShow(false);
              }}
              className="block mb-4 last:mb-0 capitalize rounded-lg"
              style={{
                backgroundColor: item.value,
              }}
            >
              <Badge variant={item.value}>{item.label}</Badge>
            </button>
          ))}
        </div>
      )}
    </div>
  );
}